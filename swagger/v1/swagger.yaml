---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cars":
    get:
      summary: list cars
      responses:
        '200':
          description: successful
    post:
      summary: create car
      tags:
      - Cars
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                year:
                  type: integer
                image:
                  type: string
                price:
                  type: decimal
                user_id:
                  type: integer
              required:
              - model
              - year
              - image
              - price
  "/api/v1/cars/{id}":
    get:
      summary: show car
      tags:
      - Car
      - another tag
      parameters:
      - model: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: car found
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    type: string
                  year:
                    type: integer
                  image:
                    type: string
                  price:
                    type: decimal
                  user_id:
                    type: integer
                required:
                - model
                - year
                - image
                - price
        '404':
          description: Car not found
    patch:
      summary: update car
      tags:
      - Cars
      parameters: []
      responses:
        '200':
          description: successful
    delete:
      summary: delete car
      responses:
        '200':
          description: successful
  "/api/v1/reservations":
    get:
      summary: list reservations
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: reservation found
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_date:
                    type: date
                  end_date:
                    type: date
                  city:
                    type: string
                  user_id:
                    type: bigint
                  car_id:
                    type: bigint
                required:
                - start_date
                - end_date
                - city
                - user_id
                - car_id
        '404':
          description: reservation not found
    post:
      summary: create reservation
      tags:
      - Reservations
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: date
                end_date:
                  type: date
                city:
                  type: string
                user_id:
                  type: bigint
                car_id:
                  type: bigint
              required:
              - start_date
              - end_date
              - city
              - user_id
              - car_id
  "/api/v1/reservations/{id}":
    get:
      summary: show reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_date:
                    type: date
                  end_date:
                    type: date
                  city:
                    type: string
                  user_id:
                    type: bigint
                  car_id:
                    type: bigint
                required:
                - start_date
                - end_date
                - city
                - user_id
                - car_id
        '404':
          description: reservation not found
    delete:
      summary: delete reservation
      responses:
        '200':
          description: successful
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000/
